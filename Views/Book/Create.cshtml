@model DemoBookStore.Models.BookModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Book</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Genre" class="control-label"></label>
                <input asp-for="Genre" class="form-control" />
                <span asp-validation-for="Genre" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AgeRestriction" class="control-label"></label>
                <input asp-for="AgeRestriction" class="form-control" />
                <span asp-validation-for="AgeRestriction" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Selected Authors:</label>
                <ul id="selectedAuthors" class="list-group"></ul>
            </div>

            @if (ViewData["Authors"] == null)
            {
                <p class="text-danger">Authors list is empty!</p>
            }
            <div class="form-group position-relative">
                <label for="authorSearch">Search Author:</label>
                <input type="text" id="authorSearch" class="form-control" placeholder="Type to search authors...">

                <div id="authorDropdown" class="dropdown-menu w-100" style="display: none;"></div>
            </div>

            <input type="hidden" id="selectedAuthorIds" name="AuthorIds" />

            <div class="form-group mt-3">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </form>
        <a asp-action="Index">Back to List</a>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            var authors = @Html.Raw(Json.Serialize(ViewData["Authors"]));
            var selectedAuthors = [];

            $("#authorSearch").on("input", function () {
                var searchText = $(this).val().toLowerCase();
                var dropdown = $("#authorDropdown");

                dropdown.empty().hide();
                if (searchText.length === 0) return;
                var filteredAuthors = authors.filter(a =>
                    a.firstName.toLowerCase().includes(searchText)
                            a.lastName.toLowerCase().includes(searchText)
                );

                if (filteredAuthors.length === 0) {
                    dropdown.append($("<div class='dropdown-item text-muted'>No authors found</div>")).show();
                    return;
                }

                filteredAuthors.forEach(author => {
                    var item = $("<div class='dropdown-item'></div>")
                        .text(author.firstName + " " + author.lastName + " (" + author.email + ")")
                        .data("author", author)
                        .on("click", function () {
                            addAuthor($(this).data("author"));
                        });

                    dropdown.append(item);
                });

                dropdown.show();
            });

            function addAuthor(author) {
                if (!author  selectedAuthors.find(a => a.id === author.id)) return;

        selectedAuthors.push(author);
        updateSelectedAuthors();

        $("#authorSearch").val("");
        $("#authorDropdown").empty().hide();
                    }

        function removeAuthor(authorId) {
            selectedAuthors = selectedAuthors.filter(a => a.id !== authorId);
            updateSelectedAuthors();
        }

        function updateSelectedAuthors() {
            var list = $("#selectedAuthors");
            list.empty();

            selectedAuthors.forEach(author => {
                var listItem = $("<li class='list-group-item d-flex justify-content-between'></li>")
                    .text(author.firstName + " " + author.lastName + " (" + author.email + ")")
                    .append($("<button class='btn btn-danger btn-sm'>Remove</button>")
                        .on("click", function () {
                            removeAuthor(author.id);
                        }));

                list.append(listItem);
            });

            $("#selectedAuthorIds").val(selectedAuthors.map(a => a.id).join(","));
        }
                });
    </script>
}